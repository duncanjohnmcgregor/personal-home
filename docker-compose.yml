version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: music-playlist-db
    environment:
      POSTGRES_USER: music_user
      POSTGRES_PASSWORD: music_password
      POSTGRES_DB: music_playlist_manager
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U music_user -d music_playlist_manager"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: music-playlist-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: music-playlist-app
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://music_user:music_password@postgres:5432/music_playlist_manager
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development-secret-key
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Prisma Studio (Database GUI)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: music-playlist-prisma
    environment:
      - DATABASE_URL=postgresql://music_user:music_password@postgres:5432/music_playlist_manager
    ports:
      - "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
    command: npx prisma studio --hostname 0.0.0.0
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: music-playlist-network