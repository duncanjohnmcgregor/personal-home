name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate

    - name: Run tests and checks
      run: |
        npm run type-check
        npm run lint

    - name: Test build
      run: npm run build

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod --confirm'
        working-directory: ./

    - name: Run post-deployment health check
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 60
        if [ -n "${{ secrets.VERCEL_PROJECT_NAME }}" ]; then
          echo "Running health check on https://${{ secrets.VERCEL_PROJECT_NAME }}.vercel.app"
          curl -f --retry 3 --retry-delay 10 "https://${{ secrets.VERCEL_PROJECT_NAME }}.vercel.app/api/health" || echo "Health check failed but deployment may still be successful"
        else
          echo "VERCEL_PROJECT_NAME not set, skipping health check"
        fi

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Production deployment successful"
          if [ -n "${{ secrets.VERCEL_PROJECT_NAME }}" ]; then
            echo "üåê Live at: https://${{ secrets.VERCEL_PROJECT_NAME }}.vercel.app"
          fi
        else
          echo "‚ùå Production deployment failed"
          exit 1
        fi