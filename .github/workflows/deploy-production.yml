name: Continuous Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Check Vercel Token
      run: |
        if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
          echo "‚ùå VERCEL_TOKEN secret is not set!"
          echo ""
          echo "üîß To fix this:"
          echo "1. Go to https://vercel.com/account/tokens"
          echo "2. Create a new token named 'GitHub Actions'"
          echo "3. Copy the token"
          echo "4. Go to GitHub repo ‚Üí Settings ‚Üí Secrets and variables ‚Üí Actions"
          echo "5. Add secret named 'VERCEL_TOKEN' with the token value"
          echo ""
          echo "üìñ See VERCEL_SECRETS_SETUP.md for detailed instructions"
          exit 1
        else
          echo "‚úÖ VERCEL_TOKEN is configured"
        fi

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate

    - name: Run tests and checks
      run: |
        npm run type-check
        npm run lint

    - name: Test build
      run: npm run build

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

    - name: Run post-deployment health check
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 30
        echo "‚úÖ Deployment completed successfully"
        echo "üîó Check your Vercel dashboard for the live URL"

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Production deployment successful"
          echo "üåê Check Vercel dashboard for live URL"
        else
          echo "‚ùå Production deployment failed"
          exit 1
        fi
